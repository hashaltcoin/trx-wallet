// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: trx.proto

package tron

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Token) Reset() {
	*x = Token{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_trx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_trx_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Token) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type TokenBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount int64 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TokenBalance) Reset() {
	*x = TokenBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenBalance) ProtoMessage() {}

func (x *TokenBalance) ProtoReflect() protoreflect.Message {
	mi := &file_trx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenBalance.ProtoReflect.Descriptor instead.
func (*TokenBalance) Descriptor() ([]byte, []int) {
	return file_trx_proto_rawDescGZIP(), []int{1}
}

func (x *TokenBalance) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type WalletIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *WalletIndex) Reset() {
	*x = WalletIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletIndex) ProtoMessage() {}

func (x *WalletIndex) ProtoReflect() protoreflect.Message {
	mi := &file_trx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletIndex.ProtoReflect.Descriptor instead.
func (*WalletIndex) Descriptor() ([]byte, []int) {
	return file_trx_proto_rawDescGZIP(), []int{2}
}

func (x *WalletIndex) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type WalletInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Private string `protobuf:"bytes,2,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *WalletInfo) Reset() {
	*x = WalletInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletInfo) ProtoMessage() {}

func (x *WalletInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletInfo.ProtoReflect.Descriptor instead.
func (*WalletInfo) Descriptor() ([]byte, []int) {
	return file_trx_proto_rawDescGZIP(), []int{3}
}

func (x *WalletInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WalletInfo) GetPrivate() string {
	if x != nil {
		return x.Private
	}
	return ""
}

type SendInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To      string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Amount  int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Index   int32  `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Private string `protobuf:"bytes,4,opt,name=private,proto3" json:"private,omitempty"`
	Gas     int32  `protobuf:"varint,5,opt,name=gas,proto3" json:"gas,omitempty"`
}

func (x *SendInfo) Reset() {
	*x = SendInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendInfo) ProtoMessage() {}

func (x *SendInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendInfo.ProtoReflect.Descriptor instead.
func (*SendInfo) Descriptor() ([]byte, []int) {
	return file_trx_proto_rawDescGZIP(), []int{4}
}

func (x *SendInfo) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendInfo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendInfo) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SendInfo) GetPrivate() string {
	if x != nil {
		return x.Private
	}
	return ""
}

func (x *SendInfo) GetGas() int32 {
	if x != nil {
		return x.Gas
	}
	return 0
}

type TransferResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Txid string `protobuf:"bytes,2,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *TransferResult) Reset() {
	*x = TransferResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResult) ProtoMessage() {}

func (x *TransferResult) ProtoReflect() protoreflect.Message {
	mi := &file_trx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResult.ProtoReflect.Descriptor instead.
func (*TransferResult) Descriptor() ([]byte, []int) {
	return file_trx_proto_rawDescGZIP(), []int{5}
}

func (x *TransferResult) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *TransferResult) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type SendTokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To       string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Amount   int64  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Contract string `protobuf:"bytes,3,opt,name=contract,proto3" json:"contract,omitempty"`
	Private  string `protobuf:"bytes,4,opt,name=private,proto3" json:"private,omitempty"`
	Gas      int32  `protobuf:"varint,5,opt,name=gas,proto3" json:"gas,omitempty"`
}

func (x *SendTokenInfo) Reset() {
	*x = SendTokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTokenInfo) ProtoMessage() {}

func (x *SendTokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTokenInfo.ProtoReflect.Descriptor instead.
func (*SendTokenInfo) Descriptor() ([]byte, []int) {
	return file_trx_proto_rawDescGZIP(), []int{6}
}

func (x *SendTokenInfo) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendTokenInfo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendTokenInfo) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *SendTokenInfo) GetPrivate() string {
	if x != nil {
		return x.Private
	}
	return ""
}

func (x *SendTokenInfo) GetGas() int32 {
	if x != nil {
		return x.Gas
	}
	return 0
}

var File_trx_proto protoreflect.FileDescriptor

var file_trx_proto_rawDesc = []byte{
	0x0a, 0x09, 0x74, 0x72, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x72, 0x6f,
	0x6e, 0x22, 0x35, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x26, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x23, 0x0a, 0x0b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x40, 0x0a, 0x0a, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x22, 0x74, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67,
	0x61, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x61, 0x73, 0x22, 0x38, 0x0a,
	0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x7f, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x61, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x67, 0x61, 0x73, 0x32, 0xe1, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x0b, 0x2e, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x1a, 0x12, 0x2e, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x10, 0x2e, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x0e, 0x2e, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x13, 0x2e, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x74, 0x72, 0x6f, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trx_proto_rawDescOnce sync.Once
	file_trx_proto_rawDescData = file_trx_proto_rawDesc
)

func file_trx_proto_rawDescGZIP() []byte {
	file_trx_proto_rawDescOnce.Do(func() {
		file_trx_proto_rawDescData = protoimpl.X.CompressGZIP(file_trx_proto_rawDescData)
	})
	return file_trx_proto_rawDescData
}

var file_trx_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_trx_proto_goTypes = []interface{}{
	(*Token)(nil),          // 0: tron.Token
	(*TokenBalance)(nil),   // 1: tron.TokenBalance
	(*WalletIndex)(nil),    // 2: tron.WalletIndex
	(*WalletInfo)(nil),     // 3: tron.WalletInfo
	(*SendInfo)(nil),       // 4: tron.SendInfo
	(*TransferResult)(nil), // 5: tron.TransferResult
	(*SendTokenInfo)(nil),  // 6: tron.SendTokenInfo
}
var file_trx_proto_depIdxs = []int32{
	0, // 0: tron.Contract.GetBalance:input_type -> tron.Token
	2, // 1: tron.Contract.GetWallet:input_type -> tron.WalletIndex
	4, // 2: tron.Contract.Transfer:input_type -> tron.SendInfo
	6, // 3: tron.Contract.TransferToken:input_type -> tron.SendTokenInfo
	1, // 4: tron.Contract.GetBalance:output_type -> tron.TokenBalance
	3, // 5: tron.Contract.GetWallet:output_type -> tron.WalletInfo
	5, // 6: tron.Contract.Transfer:output_type -> tron.TransferResult
	5, // 7: tron.Contract.TransferToken:output_type -> tron.TransferResult
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_trx_proto_init() }
func file_trx_proto_init() {
	if File_trx_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Token); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trx_proto_goTypes,
		DependencyIndexes: file_trx_proto_depIdxs,
		MessageInfos:      file_trx_proto_msgTypes,
	}.Build()
	File_trx_proto = out.File
	file_trx_proto_rawDesc = nil
	file_trx_proto_goTypes = nil
	file_trx_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContractClient is the client API for Contract service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContractClient interface {
	GetBalance(ctx context.Context, in *Token, opts ...grpc.CallOption) (*TokenBalance, error)
	GetWallet(ctx context.Context, in *WalletIndex, opts ...grpc.CallOption) (*WalletInfo, error)
	Transfer(ctx context.Context, in *SendInfo, opts ...grpc.CallOption) (*TransferResult, error)
	TransferToken(ctx context.Context, in *SendTokenInfo, opts ...grpc.CallOption) (*TransferResult, error)
}

type contractClient struct {
	cc grpc.ClientConnInterface
}

func NewContractClient(cc grpc.ClientConnInterface) ContractClient {
	return &contractClient{cc}
}

func (c *contractClient) GetBalance(ctx context.Context, in *Token, opts ...grpc.CallOption) (*TokenBalance, error) {
	out := new(TokenBalance)
	err := c.cc.Invoke(ctx, "/tron.Contract/GetBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractClient) GetWallet(ctx context.Context, in *WalletIndex, opts ...grpc.CallOption) (*WalletInfo, error) {
	out := new(WalletInfo)
	err := c.cc.Invoke(ctx, "/tron.Contract/GetWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractClient) Transfer(ctx context.Context, in *SendInfo, opts ...grpc.CallOption) (*TransferResult, error) {
	out := new(TransferResult)
	err := c.cc.Invoke(ctx, "/tron.Contract/Transfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contractClient) TransferToken(ctx context.Context, in *SendTokenInfo, opts ...grpc.CallOption) (*TransferResult, error) {
	out := new(TransferResult)
	err := c.cc.Invoke(ctx, "/tron.Contract/TransferToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContractServer is the server API for Contract service.
type ContractServer interface {
	GetBalance(context.Context, *Token) (*TokenBalance, error)
	GetWallet(context.Context, *WalletIndex) (*WalletInfo, error)
	Transfer(context.Context, *SendInfo) (*TransferResult, error)
	TransferToken(context.Context, *SendTokenInfo) (*TransferResult, error)
}

// UnimplementedContractServer can be embedded to have forward compatible implementations.
type UnimplementedContractServer struct {
}

func (*UnimplementedContractServer) GetBalance(context.Context, *Token) (*TokenBalance, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalance not implemented")
}
func (*UnimplementedContractServer) GetWallet(context.Context, *WalletIndex) (*WalletInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWallet not implemented")
}
func (*UnimplementedContractServer) Transfer(context.Context, *SendInfo) (*TransferResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Transfer not implemented")
}
func (*UnimplementedContractServer) TransferToken(context.Context, *SendTokenInfo) (*TransferResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransferToken not implemented")
}

func RegisterContractServer(s *grpc.Server, srv ContractServer) {
	s.RegisterService(&_Contract_serviceDesc, srv)
}

func _Contract_GetBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractServer).GetBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tron.Contract/GetBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractServer).GetBalance(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contract_GetWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletIndex)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractServer).GetWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tron.Contract/GetWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractServer).GetWallet(ctx, req.(*WalletIndex))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contract_Transfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractServer).Transfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tron.Contract/Transfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractServer).Transfer(ctx, req.(*SendInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Contract_TransferToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTokenInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContractServer).TransferToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tron.Contract/TransferToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContractServer).TransferToken(ctx, req.(*SendTokenInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Contract_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tron.Contract",
	HandlerType: (*ContractServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalance",
			Handler:    _Contract_GetBalance_Handler,
		},
		{
			MethodName: "GetWallet",
			Handler:    _Contract_GetWallet_Handler,
		},
		{
			MethodName: "Transfer",
			Handler:    _Contract_Transfer_Handler,
		},
		{
			MethodName: "TransferToken",
			Handler:    _Contract_TransferToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "trx.proto",
}
